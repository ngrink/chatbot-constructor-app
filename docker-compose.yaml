version: "3.8"
services:
  web:
    container_name: gigabot_web
    build:
      context: ./services/web
      dockerfile: .dockerfile
    volumes:
      - ./services/web/src:/srv/www/gigabot/services/web/src
    networks:
      - frontend
    ports:
      - 3000:3000
      - 53000:9229
    depends_on:
      server:
        condition: service_healthy
    restart: unless-stopped

  server:
    container_name: gigabot_server
    build:
      context: ./services/server
      dockerfile: .dockerfile
    volumes:
      - ./services/server/src:/srv/www/gigabot/services/server/src
    networks:
      - frontend
      - backend
    ports:
      - 7000:7000
      - 57000:9229
    depends_on:
      server_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:7000/api/v1/status || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    command: npm run debug

  core:
    container_name: gigabot_core
    build:
      context: ./services/core
      dockerfile: .dockerfile
    volumes:
      - ./services/core/src:/srv/www/gigabot/services/core/src
    networks:
      - backend
    ports:
      - 7001:7001
      - 57001:9229
    depends_on:
      server:
        condition: service_healthy
    restart: unless-stopped
    command: npm run debug

  # nlu:
  #   container_name: nlu

  # website:
  #   container_name: website

  # docs:
  #   container_name: docs

  server_db:
    container_name: gigabot_server_db
    image: postgres:15.3-alpine3.18
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=server_db
    volumes:
      - ./volumes/server_db/data:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d server_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: unless-stopped


networks:
  frontend:
    name: gigabot_frontend
  backend:
    name: gigabot_backend
